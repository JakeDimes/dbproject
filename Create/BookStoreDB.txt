--
-- File generated with SQLiteStudio v3.3.3 on Wed Oct 26 18:19:58 2022
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: Author
CREATE TABLE Author (
    Author_ID    INTEGER      NOT NULL
                              PRIMARY KEY,
    Fname        VARCHAR (30),
    Mname        VARCHAR (30),
    Lname        VARCHAR (30),
    Contact_info VARCHAR (30) 
);


-- Table: Book
CREATE TABLE Book (
    ISBN            VARCHAR (30)   PRIMARY KEY
                                   NOT NULL,
    Title           VARCHAR (255),
    Pub_Domain      VARCHAR (255)  NOT NULL
                                   REFERENCES Publisher (Web_Domain) ON DELETE NO ACTION,
    Year            CHAR (4),
    Price           DECIMAL (4, 2),
    Category        VARCHAR (15),
    Inventory_Count INTEGER        NOT NULL
);

-- Table: Contains
CREATE TABLE Contains (
    B_ISBN   VARCHAR (30) REFERENCES Book (ISBN) 
                          NOT NULL,
    Ord_ID   INTEGER      REFERENCES Purchase (Order_id) 
                          NOT NULL
                          PRIMARY KEY,
    Quantity INTEGER      NOT NULL
);


-- Table: Customer
CREATE TABLE Customer (
    FName        VARCHAR (15) NOT NULL,
    LName        VARCHAR (15) NOT NULL,
    Email        VARCHAR (30) NOT NULL
                              PRIMARY KEY,
    Phone_Number CHAR (10) 
);

-- Table: Employee
CREATE TABLE Employee (
    Employee_id  INT            NOT NULL
                                PRIMARY KEY,
    Salary       DECIMAL (7, 2),
    Department   VARCHAR (15)   NOT NULL,
    Work_Hours   INTEGER,
    Phone_Number CHAR (10),
    Fname        VARCHAR (15),
    LName        VARCHAR (15) 
);

-- Table: Publisher
CREATE TABLE Publisher (
    Publisher_name VARCHAR (255),
    Web_Domain     VARCHAR (30)  PRIMARY KEY
                                 NOT NULL,
    Address        VARCHAR (30) 
);

-- Table: Purchase
CREATE TABLE Purchase (
    Date_Time  DATETIME     NOT NULL,
    Order_id   INT          NOT NULL
                            PRIMARY KEY,
    Cust_Email VARCHAR (30) REFERENCES Customer (Email) 
);


-- Table: Sells
CREATE TABLE Sells (
    Emp_ID INTEGER REFERENCES Employee (Employee_id) 
                   NOT NULL,
    Ord_ID INTEGER REFERENCES Purchase (Order_id) 
                   NOT NULL,
    PRIMARY KEY (
        Emp_ID,
        Ord_ID
    )
);


-- Table: Writes
CREATE TABLE Writes (
    B_ISBN  VARCHAR (30) REFERENCES Book (ISBN) 
                         NOT NULL,
    Auth_ID INTEGER      REFERENCES AUTHOR (Author_id) 
                         NOT NULL,
    PRIMARY KEY (
        B_ISBN,
        Auth_ID
    )
);

-- This view finds a list of all authors and their most popular book

CREATE VIEW Most_Popular AS  
SELECT ID, BISBN, SumQ
FROM (
SELECT A.Author_ID AS ID, B.ISBN AS BISBN, SUM(Co.Quantity) AS SumQ
FROM Author As A, Book AS B, Writes AS W, Contains AS CO
WHERE A.Author_ID = W.Auth_ID 
	AND B.ISBN = W.B_ISBN
	AND Co.B_ISBN = B.ISBN
GROUP BY B.ISBN
)
Group By ID
Having MAX(SumQ);


COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
