-- This is Query 10 on the manual
-- Advanced Query 1
-- Returns a list of customer names and the total amount of money each customer has spent.
SELECT		C.Fname, C.Lname, SUM(B.price * CO.quantity)
FROM		CUSTOMER AS C, PURCHASE AS P, CONTAINS AS CO, BOOK AS B
WHERE		C.Email = P.Cust_Email
		AND P.Order_ID = CO.Ord_ID
		AND CO.B_ISBN = B.ISBN
GROUP BY 	C.Email;


-- This is Query 11 on the manual
-- Advanced Query 2
-- Returns a list of customer names and email addresses for customers who spent more than average spending amount.
SELECT 	Cust.Fname, Cust.Lname, Cust.Email
FROM 	(
	SELECT 	Avg(tot_spent) AS avg_tot_spent
	FROM 	(
		SELECT 	C.Fname, C.Lname, C.Email,
			Sum(B.Price * CO.quantity) AS tot_spent
		FROM 	Customer AS C, Purchase AS P, Contains AS CO,
			Book AS B
		WHERE 	C.Email = P.Cust_Email
			AND P.Order_ID = CO.Ord_ID
			AND CO.B_ISBN = B.ISBN
 		GROUP BY C.Email
           	)
	)
	AS avg_cust,
	(
    	SELECT 	C.Fname, C.Lname, C.Email,
		Sum(B.Price * CO.quantity) AS tot_spent
	FROM 	Customer AS C, Purchase AS P, Contains AS CO,
		Book AS B
	WHERE 	C.Email = P.Cust_Email
		AND P.Order_ID = CO.Ord_ID 
		AND CO.B_ISBN = B.ISBN
     	GROUP 	BY C.Email
	)
	AS cust
WHERE 	cust.tot_spent > avg_cust.avg_tot_spent;


-- This is Query 12 on the manual
-- Advanced Query 3
-- Returns a list of the number of copies sold for each book, sorted from the most sales to the least.
SELECT 		B.Title, SUM(C.Quantity)
FROM		PURCHASE AS P, CONTAINS AS C, BOOK AS B
WHERE		P.Order_ID = C.Ord_ID
		AND B.ISBN = C.B_ISBN
GROUP BY	B.ISBN
ORDER BY	SUM(C.Quantity) DESC; 

-- This is Query 13 on the manual
-- Advanced Query 4
-- Returns a list of the dollar amount for the copies sold of each book title, sorted from highest dollar amount sold to lowest.

SELECT 		B.ISBN, SUM(C.Quantity) * B.Price AS tot_rev
FROM 		PURCHASE AS P, CONTAINS AS C, BOOK AS B
WHERE 		P.Order_ID = C.Ord_ID
		AND B.ISBN = C.B_ISBN
GROUP BY 	B.ISBN
ORDER BY 	tot_rev DESC;

-- This is Query 14 on the manual
-- Advanced Query 5
-- Returns the name of the most popular author in the database. With popular meaning the most copies sold.
SELECT Fname, Lname, num_sold 
FROM 
        (
	SELECT 		A.Fname, A.Lname, A.author_id, sum(CO.quantity) AS num_sold
        FROM 		Author AS A, Writes AS W, Book AS B, Contains AS CO
        WHERE 		A.author_id = W.auth_id
        		AND W.B_ISBN = B.ISBN
        		AND CO.B_ISBN = B.ISBN
	GROUP BY 	A.author_id
	);

-- This is Query 15 on the manual
-- Advanced Query 6
-- Returns the name of the most profitable author in the database. With profit pertaining to dollar sales.
SELECT Fname, Lname, max(tot_rev)
FROM
	(
	SELECT 		A.Fname, A.Lname, A.author_id, SUM((CO.quantity * B.Price)) AS tot_rev
        FROM 		Author AS A, Writes AS W, Book AS B, Contains AS CO
        WHERE 		A.author_id = W.auth_id
        		AND W.B_ISBN = B.ISBN 
       			AND CO.B_ISBN = B.ISBN
        GROUP BY 	A.author_ID
	);

-- This is Query 16 on the manual
-- Advanced Query 7
-- Returns a list of customers who purchased anything from the most profitable author.
SELECT 	C.Fname, C.Lname, C.Email
FROM 	Customer AS C, Purchase AS P, Contains AS CO,
       	Book AS B, Writes AS W, Author AS A
WHERE 	C.Email = P.cust_email 
	AND P.Order_ID = CO.Ord_ID 
	AND CO.B_ISBN = B.ISBN 
	AND B.ISBN = W.B_ISBN
	AND W.Auth_ID = A.Author_ID 
	AND W.auth_id IN 
	(
    	SELECT 	author_id
      	FROM 
		(
		SELECT Author_ID, Fname, Lname, max(tot_rev) 
		FROM
			(
          		SELECT 		A.Fname, A.Lname, A.author_id,
                 			SUM( (CO.quantity * B.Price) ) AS tot_rev
			FROM 		Author AS A, Writes AS W, 
					Book AS B, Contains AS CO
			WHERE 		A.author_id = W.auth_id
					AND W.B_ISBN = B.ISBN
					AND CO.B_ISBN = B.ISBN
			GROUP BY 	A.author_ID
      			)
           	)
	);

-- This is Query 17 on the manual
-- Advanced Query 8
-- Returns a list of authors who had books purchased by customers who spent more than the average customer.
SELECT 	A.Fname, A.Lname, A.Author_ID
FROM 	Author AS A, Writes AS W, Book AS B, Customer AS C, Purchase AS P, Contains AS CO
WHERE 	C.Email = P.cust_email
	AND P.Order_ID = CO.Ord_ID 
	AND CO.B_ISBN = B.ISBN 
	AND B.ISBN = W.B_ISBN
	AND W.Auth_ID = A.Author_ID
	AND C.Email IN 
	(
	SELECT 	Cust.Email
	FROM 	
		(
           	SELECT 	Avg(tot_spent) AS avg_tot_spent
		FROM 
			(
                      	SELECT		C.Fname, C.Lname, C.Email,
					Sum(B.Price * CO.quantity) AS tot_spent
			FROM		Customer AS C, Purchase AS P, 
					Contains AS CO, Book AS B
                       	WHERE		C.Email = P.Cust_Email 
					AND P.Order_ID = CO.Ord_ID 
					AND CO.B_ISBN = B.ISBN
                       	GROUP BY 	C.Email
			)
       		)
		AS avg_cust,
		(
		SELECT 		C.Fname, C.Lname, C.Email,
				Sum(B.Price * CO.quantity) AS tot_spent
		FROM 		Customer AS C, Purchase AS P,
				Contains AS CO, Book AS B
		WHERE 		C.Email = P.Cust_Email 
				AND P.Order_ID = CO.Ord_ID 
				AND CO.B_ISBN = B.ISBN
		GROUP BY 	C.Email
		)
		AS cust
 WHERE 	cust.tot_spent > avg_cust.avg_tot_spent);
